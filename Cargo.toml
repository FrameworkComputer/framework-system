[workspace]
# Make sure new resolver is used to avoid unifying dependency features between
# runtime and build dependencies.
# See: https://github.com/rust-lang/cargo/issues/2589
resolver = "2"

members = [
    # Linux and Windows tool to inspect and customize the system
    "framework_tool",
    # UEFI tool to inspect and customize the system
    "framework_uefi",
    # Catchall library that we'll probably want to split up further
    "framework_lib",
    # Fork of https://github.com/rust-osdev/uefi-rs/blob/main/uefi-macros
    # To avoid pulling in UEFI dependencies when building for an OS
    "guid_macros",
]

# Don't build UEFI by default. Needs special cargo invocation
default-members = [
    "framework_lib",
    "framework_tool",
]

#[patch.crates-io]
#uefi = { git = "https://github.com/FrameworkComputer/uefi-rs", branch = "merged" }
#uefi-services = { git = "https://github.com/FrameworkComputer/uefi-rs", branch = "merged" }

[profile.release]
lto = true
